<div id="loadingOverlay"
     class="fixed inset-0 bg-neutral-950/80 flex items-center justify-center z-[9999] opacity-100 transition-opacity duration-500">
  <!-- Spinner SVG -->
  <svg class="inline w-8 h-8 text-gray-200 animate-spin fill-neutral-800" viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">
     <path d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z" fill="currentColor"/>
        <path d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z" fill="currentFill"/>
  </svg>
</div>
<style>
  #loadingOverlay {
  transition: opacity 0.3s ease;
}
.hidden {
  opacity: 0;
  pointer-events: none;
}

</style>
<!-- Mobile toggle button -->
<button id="sidebarToggle" class="md:hidden fixed top-4 left-4 z-50 p-2 rounded-2xl bg-neutral-900 text-white hover:bg-neutral-800 transition">
  <i data-lucide="menu" class="w-6 h-6"></i>
</button>

<!-- Sidebar -->
<aside id="sidebar"
  class="fixed md:static inset-y-0 left-0 w-64 bg-neutral-950 p-6 flex flex-col transform -translate-x-full md:translate-x-0 transition-transform duration-300 z-40 border border-neutral-900">

  <div class="mb-8 flex justify-center items-center gap-3">
    <img src="/uploads/logo.png" alt="Ploxora Logo" class="h-10 w-auto">
    <h1 class="text-xl font-bold text-white"><%= name %></h1>
  </div>
  <!-- Divider -->
  <hr class="border-neutral-900 mb-4">
<div class="relative w-full">
  <button id="userMenuButton" type="button"
    class="transition flex items-center gap-3 w-full px-4 py-2 text-left rounded-xl bg-[#0d0d0d] hover:bg-neutral-900 text-white">
    <img src="<%= user.profilePicture %>" alt="User" class="rounded-full h-8 w-8 border border-neutral-700">
    <span class="truncate"><%= user.username %></span>
    <i id="userMenuChevron" data-lucide="chevron-right" class="ml-auto w-4 h-4 transition-transform"></i>
  </button>

  <div id="userMenu"
       class="absolute top-1/2 left-[calc(100%+0.5rem)] -translate-y-1/2 w-56
              bg-neutral-900 border border-neutral-800 rounded-xl shadow-lg z-50
              transition-all duration-200 ease-out
              opacity-0 translate-x-2 scale-95 pointer-events-none invisible">
    <div class="px-4 py-3 text-sm text-gray-300 border-b border-neutral-800">
      <p class="font-medium truncate"><%= user.username %></p>
      <p class="text-gray-500 text-xs truncate"><%= user.email %></p>
    </div>
    <ul class="py-2 text-white text-sm">
      <li><a href="/settings" class="block px-4 py-2 hover:bg-neutral-800">Settings</a></li>
      <li><a href="/logout" class="block px-4 py-2 hover:bg-neutral-800">Logout</a></li>
    </ul>
  </div>
</div>

  <!-- Divider -->
  <hr class="border-neutral-900 my-4">

  <nav class="space-y-3">
    <% if (user.admin) { %>
    <a href="/dashboard" class="flex items-center gap-3 px-4 py-2 rounded-xl bg-neutral-950 text-white hover:bg-netural-950 transition border border-[#2a2a2a] hover:border-neutral-600">
      <i data-lucide="arrow-left" class="w-5 h-5"></i> Go Back
    </a>

    <a href="/admin/overview" class="flex items-center gap-3 px-4 py-2 rounded-xl bg-neutral-950 text-white hover:bg-netural-950 transition border border-[#2a2a2a] hover:border-neutral-600">
      <i data-lucide="table-of-contents" class="w-5 h-5"></i> Overview
    </a>

    <a href="/admin/settings" class="flex items-center gap-3 px-4 py-2 rounded-xl bg-neutral-950 text-white hover:bg-netural-950 transition border border-[#2a2a2a] hover:border-neutral-600">
      <i data-lucide="shield" class="w-5 h-5"></i> Settings
    </a>
    
    <a href="/admin/nodes" class="flex items-center gap-3 px-4 py-2 rounded-xl bg-neutral-950 text-white hover:bg-netural-950 transition border border-[#2a2a2a] hover:border-neutral-600">
      <i data-lucide="server" class="w-5 h-5"></i> Nodes
    </a>

    <a href="/admin/users" class="flex items-center gap-3 px-4 py-2 rounded-xl bg-neutral-950 text-white hover:bg-netural-950 transition border border-[#2a2a2a] hover:border-neutral-600">
      <i data-lucide="users" class="w-5 h-5"></i> Users
    </a>

    <a href="/admin/servers" class="flex items-center gap-3 px-4 py-2 rounded-xl bg-neutral-950 text-white hover:bg-netural-950 transition border border-[#2a2a2a] hover:border-neutral-600">
      <i data-lucide="database" class="w-5 h-5"></i> VPS Instances
    </a>
    <a href="/admin/audit-logs" class="flex items-center gap-3 px-4 py-2 rounded-xl bg-neutral-950 text-white hover:bg-netural-950 transition border border-[#2a2a2a] hover:border-neutral-600">
      <i data-lucide="logs" class="w-5 h-5"></i> Audit Logs
    </a>
    <a href="/admin/addons" class="flex items-center gap-3 px-4 py-2 rounded-xl bg-neutral-950 text-white hover:bg-netural-950 transition border border-[#2a2a2a] hover:border-neutral-600">
      <i data-lucide="puzzle" class="w-5 h-5"></i> Addons
    </a>

    <div class="px-4 pt-4">
      <span class="text-xs font-semibold tracking-wide text-gray-500">---------- ADDONS ----------</span>
    </div>

    <% addons.forEach(a => { %>
      <% if (a.status === "enabled" && a.sidebar && a.sidebar.length > 0) { %>
        <% a.sidebar.forEach(s => { %>
          <% if (s.for === "admin") { %>
            <a href="<%= s.path %>" 
               class="flex items-center gap-3 px-4 py-2 rounded-xl bg-neutral-950 text-white hover:bg-netural-950 transition border border-[#2a2a2a] hover:border-neutral-600">
              <i data-lucide="<%= s.icon || 'puzzle' %>" class="w-5 h-5"></i>
              <%= s.text || a.name %>
            </a>
          <% } %>
        <% }) %>
      <% } %>
    <% }) %>

    <% } %>
  </nav>

  <div class="mt-auto pt-6 border-t border-neutral-800">
    <span class="text-xs text-gray-500">&copy; 2025 Ploxora</span>
  </div>
</aside>
<script>
  const userMenuButton = document.getElementById("userMenuButton");
  const userMenu = document.getElementById("userMenu");
  const userMenuChevron = document.getElementById("userMenuChevron");

  function openMenu() {
    userMenu.classList.remove("opacity-0","translate-x-2","scale-95","pointer-events-none","invisible");
    userMenuChevron && userMenuChevron.classList.add("rotate-90");
  }
  function closeMenu() {
    userMenu.classList.add("opacity-0","translate-x-2","scale-95","pointer-events-none","invisible");
    userMenuChevron && userMenuChevron.classList.remove("rotate-90");
  }
  function isOpen() {
    return !userMenu.classList.contains("invisible");
  }

  if (userMenuButton) {
    userMenuButton.addEventListener("click", (e) => {
      e.stopPropagation();
      isOpen() ? closeMenu() : openMenu();
    });
  }

  document.addEventListener("click", (e) => {
    if (isOpen() && !userMenu.contains(e.target) && !userMenuButton.contains(e.target)) {
      closeMenu();
    }
  });

  // Optional: on small screens, fall back to opening UNDER the button
  const mq = window.matchMedia("(max-width: 767px)");
  function applyMobilePosition() {
    if (mq.matches) {
      userMenu.style.left = "0";
      userMenu.style.top = "100%";
      userMenu.style.transform = "translateY(0)"; // base; transitions still apply via classes
    } else {
      userMenu.style.left = "calc(100% + 0.5rem)";
      userMenu.style.top = "50%";
      userMenu.style.transform = "translateY(-50%)";
    }
  }
  applyMobilePosition();
  mq.addEventListener("change", applyMobilePosition);
</script>
<script>
  const sidebar = document.getElementById("sidebar");
  const toggle = document.getElementById("sidebarToggle");

  toggle.addEventListener("click", () => {
    sidebar.classList.toggle("-translate-x-full");
  });
</script>
<script>
  window.addEventListener("load", () => {
    const loader = document.getElementById("loadingOverlay");
    const content = document.getElementById("pageContent");

    setTimeout(() => {
      loader.classList.add("opacity-0");
      loader.classList.add("pointer-events-none");
      setTimeout(() => loader.remove(), 500);
      content.classList.remove("hidden");
    }, 200);
  });
</script>