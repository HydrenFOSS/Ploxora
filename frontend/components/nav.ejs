<header class="bg-neutral-950 px-6 py-4 flex items-center justify-between shadow-md relative z-20">
  <!-- Search Bar -->
  <div class="flex-1 max-w-md relative">
    <div class="relative">
      <i data-lucide="search" class="absolute left-3 top-1/2 -translate-y-1/2 text-gray-400 w-5 h-5"></i>
      <input 
        id="searchInput"
        type="text" 
        placeholder="Search..." 
        class="w-full pl-10 pr-4 py-2 rounded-xl bg-neutral-900 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-neutral-700"
        autocomplete="off"
      >
    </div>

    <!-- Search Results -->
    <div id="searchResults" class="absolute mt-2 w-full bg-neutral-900 rounded-xl shadow-lg hidden">
      <ul class="py-2 text-white text-sm" id="searchList"></ul>
    </div>
  </div>

  <!-- User Section -->
  <div class="flex items-center gap-4 ml-6">
    <span class="text-white font-medium"><%= user.username %></span>
    <img src="<%= user.profilePicture %>" alt="User" class="rounded-full h-10 w-10 border-2 border-neutral-800">
    <a href="/logout" class="px-4 py-2 bg-neutral-800 hover:bg-neutral-700 text-white rounded-xl font-medium transition">
      <i data-lucide="log-out" class="w-4 h-4 inline mr-1"></i> Logout
    </a>
  </div>
</header>

<script>
  const searchInput = document.getElementById("searchInput");
  const searchResults = document.getElementById("searchResults");
  const searchList = document.getElementById("searchList");
  const routes = [
    { name: "Dashboard", path: "/dashboard" },
    { name: "Settings", path: "/settings" },
    <% if (user.admin) { %>
    { name: "Admin Overview", path: "/admin/overview" },
    { name: "Admin Settings", path: "/admin/settings" },
    { name: "Admin Servers", path: "/admin/servers" },
    { name: "Admin Nodes", path: "/admin/nodes" },
    { name: "Admin Users", path: "/admin/users" },
    <% } %>
  ];

  // Handle search input
  searchInput.addEventListener("input", () => {
    const query = searchInput.value.toLowerCase();
    searchList.innerHTML = "";

    if (!query) {
      searchResults.classList.add("hidden");
      return;
    }

    const filtered = routes.filter(r => r.name.toLowerCase().includes(query));
    
    if (filtered.length > 0) {
      filtered.forEach(r => {
        const li = document.createElement("li");
        li.innerHTML = `<a href="${r.path}" class="block px-4 py-2 hover:bg-neutral-800 rounded-md">${r.name}</a>`;
        searchList.appendChild(li);
      });
      searchResults.classList.remove("hidden");
    } else {
      searchResults.classList.add("hidden");
    }
  });

  // Hide results when clicking outside
  document.addEventListener("click", (e) => {
    if (!searchResults.contains(e.target) && e.target !== searchInput) {
      searchResults.classList.add("hidden");
    }
  });
</script>
