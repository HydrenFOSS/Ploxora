<!DOCTYPE html>
<html lang="en">
<%- include('../components/head') %>

<body class="bg-neutral-900 text-gray-300 font-[Figtree] min-h-screen flex">

  <!-- Sidebar -->
  <%- include('../components/sidebar.ejs') %>

  <!-- Main Content -->
  <div class="flex-1 flex flex-col">
    <!-- Navbar -->
    <%- include('../components/nav.ejs') %>

    <!-- Main content -->
    <main class="flex-1 p-6 space-y-8">

      <!-- Nodes Table -->
      <section class="bg-neutral-800 rounded-2xl p-6 shadow-lg border border-[#2a2a2a]">
        <div class="flex items-center justify-between mb-4">
          <h2 class="text-2xl font-semibold text-gray-200 tracking-wide">Dashboard Nodes</h2>
          <button onclick="openCNModal()"
            class="bg-blue-600 hover:bg-blue-500 transition px-4 py-2 rounded-xl text-white font-medium shadow-lg">
            + Create Node
          </button>
        </div>

        <% if (req.query.msg === "USER_BANNED" || req.query.msg === "USER_UNBANNED" || req.query.msg === "SERVER_CREATED" || req.query.msg === "SERVER_DELETED" || req.query.msg === "NODE_DELETED" || req.query.msg === "NODE-CREATED" || req.query.msg === "IMAGE_CREATED" || req.query.msg === "IMAGE_DELETED") { %>
          <div class="mb-4 p-4 rounded-lg flex items-start space-x-3 
            <%= req.query.msg.includes('BANNED') || req.query.msg.includes('CREATED') ? 'bg-green-600 text-white' : 'bg-blue-600 text-white' %>">
            <!-- Icon -->
            <div class="flex-shrink-0 flex flex-col justify-center">
              <% if (req.query.msg.includes('BANNED') || req.query.msg.includes('CREATED')) { %>
                <svg xmlns="http://www.w3.org/2000/svg" class="h-7 w-7" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="4">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M5 13l4 4L19 7" />
                </svg>
              <% } else { %>
                <svg xmlns="http://www.w3.org/2000/svg" class="h-7 w-7" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="4">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M12 8v4m0 4h.01" />
                </svg>
              <% } %>
            </div>
            <!-- Texts -->
            <div class="flex flex-col">
              <p class="font-semibold leading-tight">
                <% if (req.query.msg === "USER_BANNED") { %>User Banned<% } %>
                <% if (req.query.msg === "USER_UNBANNED") { %>User Unbanned<% } %>
                <% if (req.query.msg === "SERVER_CREATED") { %>Server Created<% } %>
                <% if (req.query.msg === "SERVER_DELETED") { %>Server Deleted<% } %>
                <% if (req.query.msg === "NODE_DELETED_WITH_SERVERS") { %>Node Deleted<% } %>
                <% if (req.query.msg === "NODE-CREATED") { %>Node Created<% } %>
                <% if (req.query.msg === "NODE_DELETED") { %>Node Deleted<% } %>
                <% if (req.query.msg === "IMAGE_CREATED") { %>Image Created<% } %>
                <% if (req.query.msg === "IMAGE_DELETED") { %>Image Deleted<% } %>
              </p>
              <p class="text-sm leading-tight">
                <% if (req.query.msg === "USER_BANNED") { %>User was successfully banned<% } %>
                <% if (req.query.msg === "USER_UNBANNED") { %>User was successfully unbanned<% } %>
                <% if (req.query.msg === "SERVER_CREATED") { %>Server deployed successfully<% } %>
                <% if (req.query.msg === "SERVER_DELETED") { %>Server deleted successfully<% } %>
                <% if (req.query.msg === "NODE-CREATED") { %>Node added successfully<% } %>
                <% if (req.query.msg === "NODE_DELETED_WITH_SERVERS") { %>Node deleted successfully with servers<% } %>
                <% if (req.query.msg === "NODE_DELETED") { %>Node deleted successfully<% } %>
                <% if (req.query.msg === "IMAGE_CREATED") { %>Image added successfully<% } %>
                <% if (req.query.msg === "IMAGE_DELETED") { %>Image deleted successfully<% } %>
              </p>
            </div>
          </div>
        <% } %>

        <div class="overflow-x-auto rounded-2xl border border-[#2a2a2a]">
          <table class="w-full border-collapse">
            <thead>
              <tr class="bg-neutral-900 text-gray-300 text-sm uppercase tracking-wide">
                <th class="px-6 py-3">Node Name</th>
                <th class="px-6 py-3">Address</th>
                <th class="px-6 py-3">Port</th>
                <th class="px-6 py-3">Location</th>
                <th class="px-6 py-3">Actions</th>
              </tr>
            </thead>
            <tbody class="divide-y divide-neutral-700">
              <% if (nodes && nodes.length > 0) { %>
                <% nodes.forEach((node, index) => { %>
                  <tr class="hover:bg-neutral-850 transition">
                    <td class="px-6 py-3 font-medium text-gray-200 flex items-center gap-2">
                      <% if (node.status === "Online") { %>
                        <!-- Green dot -->
                        <span class="relative flex h-3 w-3">
                          <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-green-500 opacity-75"></span>
                          <span class="relative inline-flex rounded-full h-3 w-3 bg-green-500"></span>
                        </span>
                      <% } else { %>
                        <!-- Red dot -->
                        <span class="relative flex h-3 w-3">
                          <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-red-500 opacity-75"></span>
                          <span class="relative inline-flex rounded-full h-3 w-3 bg-red-500"></span>
                        </span>
                      <% } %>
                      <%= node.name || "Unnamed Node" %>
                    </td>
                    <td class="px-6 py-3 text-gray-300"><%= node.address || "N/A" %></td>
                    <td class="px-6 py-3 text-gray-300"><%= node.port || "N/A" %></td>
                    <td class="px-6 py-3 text-gray-300"><%= node.location || "Unknown" %></td>
                    <td class="px-6 py-3 flex gap-2">
                      <!-- Init Command -->
                      <button onclick="openInitComd('<%= node.id %>')"
                        class="px-3 py-1 rounded-lg bg-blue-600 hover:bg-blue-700 text-white text-sm font-medium transition">
                        Init Command
                      </button>

                      <!-- Delete Node -->
                      <form action="/admin/nodes/delete/<%= node.id %>" method="POST"
                        onsubmit="return confirm('Are you sure you want to delete this node? This cannot be undone.');">
                        <button type="submit"
                          class="px-3 py-1 rounded-lg bg-red-600 hover:bg-red-700 text-white text-sm font-medium transition">
                          Delete
                        </button>
                      </form>
                    </td>
                  </tr>
                <% }) %>
              <% } else { %>
                <tr>
                  <td colspan="5" class="text-center px-6 py-6 text-gray-500 italic">
                    No nodes yet.
                  </td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </section>

      <!-- Init Command Modal -->
      <div id="initCommandModal"
        class="hidden fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-50">
        <div class="bg-neutral-800 rounded-2xl shadow-lg p-6 w-full max-w-lg border border-[#2a2a2a]">
          <h2 class="text-xl font-semibold text-white mb-4">Initialization Command</h2>
          <p class="text-gray-400 mb-3">Run this command on your node server:</p>

          <pre id="initCommandText" class="bg-neutral-900 p-3 rounded-lg text-green-400 text-sm overflow-x-auto"></pre>

          <div class="flex justify-end space-x-3 mt-5">
            <button onclick="closeInitComd()" class="px-4 py-2 bg-gray-600 hover:bg-gray-500 text-white rounded-lg">
              Close
            </button>
            <button onclick="copyInitComd()" class="px-4 py-2 bg-blue-600 hover:bg-blue-500 text-white rounded-lg">
              Copy
            </button>
          </div>
        </div>
      </div>

      <!-- Create Node Modal -->
      <div id="createNodeModal"
        class="fixed inset-0 bg-black bg-opacity-60 hidden flex items-center justify-center z-50">
        <div class="bg-neutral-800 p-6 rounded-2xl shadow-2xl w-full max-w-md border border-[#2a2a2a]">
          <h2 class="text-xl font-semibold text-gray-200 mb-4">Create New Node</h2>

          <form action="/admin/nodes/create" method="POST" class="space-y-4">
            <div>
              <label class="block text-gray-300 mb-1">Node Name</label>
              <input type="text" name="name" required
                class="w-full p-2 rounded-lg bg-[#111] border border-[#333] text-white focus:outline-none focus:ring-2 focus:ring-blue-600">
            </div>

            <div>
              <label class="block text-gray-300 mb-1">Address</label>
              <input type="text" name="address" required
                class="w-full p-2 rounded-lg bg-[#111] border border-[#333] text-white focus:outline-none focus:ring-2 focus:ring-blue-600">
            </div>

            <div>
              <label class="block text-gray-300 mb-1">Port</label>
              <input type="number" name="port" required
                class="w-full p-2 rounded-lg bg-[#111] border border-[#333] text-white focus:outline-none focus:ring-2 focus:ring-blue-600">
            </div>

            <div class="flex justify-end space-x-3 pt-4">
              <button type="button" onclick="closeCNModal()"
                class="px-4 py-2 rounded-lg bg-gray-600 hover:bg-gray-500 text-white transition">
                Cancel
              </button>
              <button type="submit"
                class="px-4 py-2 rounded-lg bg-blue-600 hover:bg-blue-500 text-white transition shadow-md">
                Save
              </button>
            </div>
          </form>
        </div>
      </div>
    </main>
  </div>
  <script>
    function openCNModal() {
      document.getElementById("createNodeModal").classList.remove("hidden");
    }
    function closeCNModal() {
      document.getElementById("createNodeModal").classList.add("hidden");
    }
    function closeInitComd() {
      document.getElementById("initCommandModal").classList.add("hidden");
    }
    function copyInitComd() {
      const text = document.getElementById("initCommandText").textContent;
      navigator.clipboard.writeText(text).then(() => {
        alert("Copied to clipboard!");
      });
    }
    async function openInitComd(nodeId) {
      try {
        const res = await fetch(`/admin/node/${nodeId}`);
        const data = await res.json();

        if (!data.success) return alert("Failed to fetch node info");

        const node = data.node;
        const fullUrl = `${window.location.protocol}//${window.location.host}`;
        const cmd = `npm run initialize -- --key ${node.token} --ploxora ${fullUrl}`;

        document.getElementById("initCommandText").textContent = cmd;
        document.getElementById("initCommandModal").classList.remove("hidden");
      } catch (err) {
        console.error("Init command error:", err);
        alert("Could not load init command:", err);
      }
    }
    lucide.createIcons();
  </script>
</body>
</html>
